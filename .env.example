# These 3 variables are read by the image "postgres".
POSTGRES_USER=keygentest
POSTGRES_PASSWORD=mysecretpassword
POSTGRES_DB=keygentest

# The following are ready by the image "keygen/api"
# Note that ALL of the following environment variables must be set
# so that `rails keygen:setup` does not run interactively.

# Tell keygen how to access Redis.
REDIS_URL=redis://redis:6379/0

# KEYGEN_ACCOUNT_ID is required when KEYGEN_MODE=singleplayer (the default)
# It MUST BE a UUID.
# Note that the UUID must be in lowercase.
# It is because keygen use a simple string comparison to match the expected account ID in singleplayer mode.
# See https://github.com/keygen-sh/keygen-api/blob/fb819b5b627f984387a236e3da79eb1597af3ead/app/services/resolve_account_service.rb#L21
# The UUID returned by Postgres is in lowercase so if the environment variable is in uppercase, the comparison never result in true.
KEYGEN_ACCOUNT_ID=$(uuidgen | tr A-Z a-z)

# KEYGEN_HOST is required to tell what the expected host is.
# KEYGEN_DOMAIN and KEYGEN_SUBDOMAIN are used to constraint routing.
# See https://github.com/keygen-sh/keygen-api/blob/c73f7b01239d19064bef19f32b4dda04398e1eb7/config/routes.rb#L7
# If KEYGEN_DOMAIN and KEYGEN_SUBDOMAIN are not given, then it is derived from KEYGEN_HOST.
# Since KEYGEN_HOST is localhost, it has no subdomain, the derivation will fail in a way that all requests will result in 404.
# So we need to explicitly set KEYGEN_DOMAIN and KEYGEN_SUBDOMAIN.
KEYGEN_HOST=localhost
KEYGEN_DOMAIN=localhost
KEYGEN_SUBDOMAIN=

# KEYGEN_ADMIN_EMAIL sets up the admin account.
KEYGEN_ADMIN_EMAIL=user@example.com

# KEYGEN_ADMIN_PASSWORD is the password for KEYGEN_ADMIN_EMAIL
KEYGEN_ADMIN_PASSWORD=password

# SECRET_KEY_BASE is a variable used by Ruby on Rails.
# See https://api.rubyonrails.org/classes/Rails/Application.html#method-i-secret_key_base
SECRET_KEY_BASE=$(openssl rand -hex 64)

# The following are used by Active Record.
# See https://guides.rubyonrails.org/active_record_encryption.html
ENCRYPTION_DETERMINISTIC_KEY=$(openssl rand -base64 32)
ENCRYPTION_PRIMARY_KEY=$(openssl rand -base64 32)
ENCRYPTION_KEY_DERIVATION_SALT=$(openssl rand -base64 32)
